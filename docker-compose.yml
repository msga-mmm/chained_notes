version: latest

services:
  database:
    image: postgres:alpine
    container_name: ${DATABASE_CONTAINER_NAME}
    volumes:
      - ${PROJECT_DATA_DIR}/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 10

  application:
    build: .
    container_name: ${APPLICATION_CONTAINER_NAME}
    command:
      - sh
      - -c
      - |
        python manage.py migrate
        python manage.py runserver 0.0.0.0:80
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      # avoid output buffering for realtime logging
      PYTHONUNBUFFERED: 1

      CSRF_TRUSTED_ORIGIN: "https://localhost"
    depends_on:
      database:
        condition: service_healthy

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
    volumes:
      # Nginx configuration
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

      # SSL configuration
      - ./nginx/ssl/cert.pem:/etc/nginx/ssl/cert.pem
      - ./nginx/ssl/dev.pem:/etc/nginx/ssl/dev.pem
    depends_on:
      - application
